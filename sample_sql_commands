-- Create a table named 'Persons' with columns for Person ID, last name, first name, address, and city
CREATE TABLE Persons (
    PersonID int,
    LastName VARCHAR(255),
    FirstName VARCHAR(255),
    Address VARCHAR(255),
    City VARCHAR(255)
);

-- Insert records into the 'Persons' table
INSERT INTO Persons (PersonID, LastName, FirstName, Address, City)
VALUES (1, 'Smith', 'John', '31 Central Park', 'New York');

INSERT INTO Persons (PersonID, LastName, FirstName, Address, City)
VALUES (2, 'Johnson', 'Emily', '22 Lakeview St.', 'Chicago');

INSERT INTO Persons (PersonID, LastName, FirstName, Address, City)
VALUES (3, 'Williams', 'James', '408 Cedar Rd.', 'Seattle');

INSERT INTO Persons (PersonID, LastName, FirstName, Address, City)
VALUES (4, 'Brown', 'Jessica', '50 Elm St.', 'Austin');

INSERT INTO Persons (PersonID, LastName, FirstName, Address, City)
VALUES (5, 'Davis', 'Michael', '1208 Maple Ave.', 'San Francisco');

INSERT INTO Persons (PersonID, LastName, FirstName, Address, City)
VALUES (6, 'Miller', 'Sarah', '987 Oak St.', 'Boston');

INSERT INTO Persons (PersonID, LastName, FirstName, Address, City)
VALUES (7, 'Wilson', 'Matthew', '55 Pine St.', 'Denver');

INSERT INTO Persons (PersonID, LastName, FirstName, Address, City)
VALUES (8, 'Moore', 'Ashley', '66 Birch Rd.', 'Miami');

INSERT INTO Persons (PersonID, LastName, FirstName, Address, City)
VALUES (9, 'Taylor', 'Christopher', '238 Spruce St.', 'Atlanta');

INSERT INTO Persons (PersonID, LastName, FirstName, Address, City)
VALUES (10, 'Anderson', 'Stephanie', '111 Maple Dr.', 'Las Vegas');

-- Retrieve all records from the 'Persons' table
SELECT * FROM Persons;

-- The following commented code would add a unique constraint to ensure no duplicate records are created
-- ALTER TABLE Persons ADD CONSTRAINT uc_PersonInfo UNIQUE (LastName, FirstName, Address, City);

-- The following commented code would find any duplicate records based on LastName, FirstName, Address, and City
-- SELECT LastName, FirstName, Address, City, COUNT(*)
-- FROM Persons
-- GROUP BY LastName, FirstName, Address, City
-- HAVING COUNT(*) > 1;

-- The following commented code would delete duplicate records, retaining the first entry of each set of duplicates
-- ;WITH Cte AS (
--     SELECT *,
--            ROW_NUMBER() OVER (PARTITION BY LastName, FirstName, Address, City ORDER BY PersonID) AS rn
--     FROM Persons
-- )
-- DELETE FROM Cte
-- WHERE rn > 1;

-- Switch to the 'master' database to perform operations at the server level
USE master;
GO

-- Check if the database 'temp_Delete' exists and create it if not
IF NOT EXISTS (
      SELECT name
      FROM sys.databases
      WHERE name = N'temp_Delete'
      )
   CREATE DATABASE [temp_Delete];
GO

-- Enable Query Store for 'temp_Delete' database if the SQL Server version is greater than 12
IF SERVERPROPERTY('ProductVersion') > '12'
   ALTER DATABASE [temp_Delete] SET QUERY_STORE = ON;
GO


use SuperstoreUS

SELECT * from Orders_East

select * from Orders_East ORDER by City

select * from Orders_East ORDER by Sales DESC


select * from Orders_East 
ORDER by Quantity DESC


select * from Orders_East 
order by State, sales DESC

-- top 10

SELECT top(10) * from Orders_East

SELECT top(10) * from Orders_East order by Sales desc

select distinct (Category) from Orders_East 

select distinct (Segment) from Orders_East